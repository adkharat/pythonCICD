pipeline {

   agent any

    stages {

        stage('CleanWorkspace and Clone') {
            steps {
                sh 'uname -a'

                cleanWs()
                echo 'Workspace cleaned /var/lib/jenkins/workspace'

                checkout scm 
                echo 'Code clone in Workspace /var/lib/jenkins/workspace'

                // echo 'Python and Pip version '
                // sh 'python3 --version'
                // sh 'command -v pip3 || (sudo apt-get update && sudo apt-get install -y python3-pip)'
                // sh 'pip3 --version'
            }
        }

        stage('Build') {
            steps {
                echo "started docker build image for tag ${env.BUILD_NUMBER}"
                sh "pwd"
                sh 'ls -la'
                sh 'docker ps'
                sh "docker build --no-cache -t adkharat/lambdafunction:${env.BUILD_NUMBER} -f ./BuildDockerFile ."
            }
        }

        stage('Test') {
            steps {
                echo "Testing docker build image for tag ${env.BUILD_NUMBER}"
                sh "pwd"
                sh 'ls -la'
                sh 'docker ps'
                sh "docker build --no-cache -t adkharat/testfunctions:${env.BUILD_NUMBER} ./Test"
            }
        }

        stage('Deploy') {
            steps {
                echo "Running the container for build ${env.BUILD_NUMBER}"
                sh "docker run adkharat/lambdafunction:${env.BUILD_NUMBER}"
            }
        }

        // stage('Setup Python Environment and Dependench Installation') {
        //     steps {
        //         script {
        //             // Create a virtual environment
        //             sh 'python3 -m venv venv'

        //             // Activate the virtual environment and install requirements
        //             sh '''
        //             . ./venv/bin/activate
        //             pip3 install -r requirements.txt
        //             '''
        //         }
        //     }
        // }

        // stage('Build') {
        //     steps {
        //             // Activate the virtual environment and run the program
        //             sh '''
        //             . ./venv/bin/activate
        //             python3 lambdaFunction.py
        //             '''
        //     }
        // }

        // stage('Unit Test') {
        //     steps {
        //             // Activate the virtual environment and run the Unit test
        //             sh '''
        //             . ./venv/bin/activate
        //             python3 -m unittest test_functions.py
        //             '''
        //     }
        // }
    } 
}